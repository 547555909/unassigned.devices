#!/usr/bin/php
<?PHP
/* Copyright 2016, Dan Landon.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>

<?
$plugin = "unassigned.devices";
require_once("/usr/local/emhttp/plugins/${plugin}/include/lib.php");

$DEVNAME = (isset($_ENV['DEVNAME'])) ? $_ENV['DEVNAME'] : ( isset($argv[1]) ? $argv[1] : NULL );
$DEVNAME = (file_exists($DEVNAME)) ? realpath($DEVNAME) : $DEVNAME;
if (! $DEVNAME) die("Fail: device not defined.\n");

# Mount Remote SMB mounts
if (strpos($DEVNAME, "//") === 0 || $DEVNAME == "all") {
	foreach (get_samba_mounts() as $info) {
		$device = $info['device'];
		if ( preg_match("#".$DEVNAME."#i", $device) || $DEVNAME == "all" ) {
			if (! $info['automount'] && $DEVNAME == "all" ) {
				unassigned_log("Remote SMB mount '${info[device]}' auto mount is disabled, not mounted.");
				continue;
			}
			unassigned_log("Remote SMB share found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))), "DEBUG");
			@touch(sprintf($paths['unmounting'],basename($info['device'])));
			if (do_mount( $info )) {
				add_smb_share($info['mountpoint'], $info['device']);
				execute_script($info, "ADD");
			}
			@unlink(sprintf($paths['unmounting'],basename($info['device'])));
		}
	}
}

# Mount local disks
foreach(get_unasigned_disks() as $name => $disk) {
	$device = $disk['device'];
	foreach ($disk['partitions'] as $partition) {
		if ( preg_match("#".$DEVNAME."#i", realpath($partition)) || $DEVNAME == "all" ) {
			$info = get_partition_info($partition,true);
			if (! $info['automount'] && ( $DEVNAME == "all" || isset($_ENV['DEVNAME']) )) {
				unassigned_log("Disk with serial '${info[serial]}' auto mount is disabled, not mounted.");
				continue;
			}
			unassigned_log("Drive found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))), "DEBUG");
			unassigned_log("Adding disk '${info[device]}'...");
			@touch(sprintf($paths['mounting'],basename($info['device'])));
			if (do_mount( $info )) {
				if (config_shared( $info['serial'],  $info['part'])) {
					add_smb_share($info['mountpoint'], $info['label']);
					add_nfs_share($info['mountpoint']);
				} else {
					unassigned_log("Partition '{$info[label]}' marked as not sharable, skipping.");
				}
				execute_script($info, "ADD");
				setSleepTime($device);
			}
			@unlink(sprintf($paths['mounting'],basename($info['device'])));
		}
	}
}

touch($paths['reload']);
?>
