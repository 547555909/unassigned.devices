#!/usr/bin/php
<?PHP
/* Copyright 2016, Dan Landon.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>

<?
$plugin = "unassigned.devices";
require_once("/usr/local/emhttp/plugins/${plugin}/include/lib.php");
$PRESENT=array();

$DEVNAME = (isset($_ENV['DEVNAME'])) ? $_ENV['DEVNAME'] : ( isset($argv[1]) ? $argv[1] : NULL );
$DEVNAME = (file_exists($DEVNAME)) ? realpath($DEVNAME) : $DEVNAME;
if (! $DEVNAME) die("Fail: disk device not informed.\n");

# Deal with SMB shares
if (strpos($DEVNAME, "//") === 0 || $DEVNAME == "all" || $DEVNAME == "shutdown") {
  foreach (get_samba_mounts() as $info) {
    $device = $info['device'];
    if ( preg_match("#".$DEVNAME."#i", $device) || $DEVNAME == "all" || $DEVNAME == "shutdown" ) {
      if ( $info['automount'] && $DEVNAME == "all" ) {
        debug("Disk with serial '${info[serial]}' auto mount is enabled, not unmounted.");
        continue;
      }
      debug("SMB share found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      if ( is_mounted($info['device']) ) {
        @touch(sprintf($paths['unmounting'],basename($info['device'])));
        execute_script($info, "REMOVE");
        debug("Unmounting SMB share '${info[device]}' ...");
        if ( do_unmount($info['device'], $info['mountpoint']) ) {
          debug("Share '${info[device]}' unmount successfull.");
          @unlink(sprintf($paths['unmounting'],basename($info['device'])));
        }
      } else {
        debug("SMB share '${info[device]}' not mounted, cannot unmount...");
      }
    }
  }
}

# Deal with local disks
foreach(get_unasigned_disks() as $disk) {
  $device = $disk['device'];
  $PRESENT[] = $device;
  foreach ($disk['partitions'] as $partition) {
    if ( preg_match("#".$DEVNAME."#i", realpath($partition)) || $DEVNAME == "all" || $DEVNAME == "shutdown" ) {
      $info = get_partition_info($partition);
      if ( $info['automount'] && $DEVNAME == "all" ) {
        debug("Disk with serial '${info[serial]}' auto mount is enabled, not unmounted.");
        continue;
      }
      debug("Drive found with the following attributes: ".(implode(', ', array_map(function($v, $k){$v = (strpos($k, "pass") !== false) ? "*******" : $v; return "$k='$v'"; }, $info, array_keys($info)))));
      if ( is_mounted($info['device']) ) {
        @touch(sprintf($paths['unmounting'],basename($info['device'])));
        debug("Removing disk '${info[label]}'' shares ...");
        execute_script($info, "REMOVE");
        if ( rm_smb_share($info['target'], $info['label']) && rm_nfs_share($info['target']) ) {
          debug("Unmounting disk ${info[label]} ..");
          if ( do_unmount($info['device'], $info['mountpoint']) ) {
            debug("Disk ${info[label]} removed successfully.");
          }
        }
        @unlink(sprintf($paths['unmounting'],basename($info['device'])));
      } else {
        debug("Disk '${info[label]}' not mounted, cannot unmount...");
      }
    }
  }
}
touch($paths['reload']);
?>